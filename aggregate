#!/bin/sh

cat << EOF > config
sy=XXX
sm=XXX
sd=XXX
ey=XXX
em=XXX
ed=XXX
monthly=1
publish=0
suffix=aggregate
prefix=aggregate
EOF

. ./config

# Alpha Phase
d=20160328-20160617
echo $d
head -n 7 ../$d/pbs-report.raw.$d.csv > pbs-report.raw.$suffix.csv
n=`grep -n "PBS Pro Cluster Accounting Summary Statistics" ../$d/pbs-report.raw.$d.csv | sed -e 's,:.*,,'`
((n=n-9))
tail -n +8 ../$d/pbs-report.raw.$d.csv | head -n $n | sed -e 's,^,A,' >>  pbs-report.raw.$suffix.csv

# Beta Phase
for dd in 20160618-20160630 2016{07..12}01-* {2017..2020}{01..12}01-* ; do
 d=`cd .. ; echo $dd`
 if [ ! -d ../$d ] ; then continue ; fi
 echo $d
 n=`grep -n "PBS Pro Cluster Accounting Summary Statistics" ../$d/pbs-report.raw.$d.csv | sed -e 's,:.*,,'`
 ((n=n-9))
 tail -n +8 ../$d/pbs-report.raw.$d.csv | head -n $n >>  pbs-report.raw.$suffix.csv
done


# generate cleaned and core csv files, disabled for now
if [ 0 -eq 1 ] ; then
d=20160328-20160617
echo $d
head -n 2 ../$d/pbs-report.cleaned.$d.csv > pbs-report.cleaned.$suffix.csv
tail -n +3 ../$d/pbs-report.cleaned.$d.csv | sed -e 's,^,A,' >> pbs-report.cleaned.$suffix.csv
head -n 1 ../$d/cores.$d.csv > cores.$suffix.csv
tail -n +2 ../$d/cores.$d.csv | sed -e 's,^,A,' >> cores.$suffix.csv
for dd in 20160618-20160630 2016{07..12}01-* {2017..2020}{01..12}01-* ; do
 d=`cd .. ; echo $dd`
 if [ ! -d ../$d ] ; then continue ; fi
 echo $d
 tail -n +3 ../$d/pbs-report.cleaned.$d.csv >> pbs-report.cleaned.$suffix.csv
 tail -n +2 ../$d/cores.$d.csv >> cores.$suffix.csv
done
fi
