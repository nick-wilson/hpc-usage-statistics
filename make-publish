#!/bin/bash
cd `dirname "$0"` || exit $?

. ./config

# Copy data to log directory
outputfiles=`echo {active-totals,user-summary,alldata,top100,total,org,application,user_,stats_by_core,cpu_walltime_by_user_by_application_,storage,project_,ams-,queue_firstrun,partial,{cores,gpus}-{mean,summary}}*.$suffix.csv {data,qwait}.$suffix.Rdata`

if [ -f am-discrepancy.$suffix.Rdata ] ; then outputfiles="$outputfiles am-discrepancy.$suffix.csv" ; fi

copy_to_logdir () {
 mkdir -p $logdir/$1/stakeholder $logdir/$1/other && \
 cp -pv $outputfiles $logdir/$1/
 for stakeholder in $stakeholders ; do
  mv -v $logdir/$1/*.$stakeholder.$suffix.csv $logdir/$1/stakeholder/ 2>/dev/null
 done
 for other in $others ; do
  mv -v $logdir/$1/*.$other.$suffix.csv $logdir/$1/other/ 2>/dev/null
 done
 rmdir $logdir/$1/stakeholder $logdir/$1/other 2>/dev/null
 cp -pv *.png application_usage-${suffix}.xlsx "$logdir/reporting/$type/"
}

if [ x"$type" == xpartial ] ; then
 echo partial report, not copying output to log directory
elif [ x"$type" == xstage ] ; then
 copy_to_logdir stage
elif [ x"$type" == xyearly ] ; then
 copy_to_logdir yearly
elif [ x"$type" == xannual ] ; then
 copy_to_logdir annual
elif [ x"$type" == xhalf ] ; then
 copy_to_logdir half
elif [ x"$type" == xaggregate ] ; then
 copy_to_logdir aggregate
elif [ x"$type" == xweekly ] ; then
 copy_to_logdir weekly
else
 copy_to_logdir
 if [ ! -f cumulative.$suffix.csv ] ; then ./make-totals ; fi
fi

if [ -d dgx ] ; then (cd dgx && ./make-publish) ; fi

# Set appropriate file permissions on data
./fix-permissions
