#!/bin/bash

. ./config

for f in config.R ; do
 if [ ! -f $f ] ; then
  eval ./make-$f
 fi
done

# R script to merge output from pbs-report with job application statistics
scripts="Storage.R Storage-Fileset.R PBS-Application-Stats-Clean.R PBS-Application-Stats-Combined.R ProjectInfo.R PBS-Application-Stats-Project.R PBS-Application-Stats-Active.R PBS-Application-Stats-Utilisation.R PBS-qwait-dump.R"

# reduce size of ancillary files
./filter-alljobs

type Rscript > /dev/null 2>&1 || module load R/3.3.1
# Run the script to generate csv files with statistics
for script in $scripts ; do
 echo running $script
 Rscript "$script"
done

if [ ${dgx:-0} -eq 1 ] ; then make -C dgx ; fi

if [  ${publish:-0} -eq 1 ] ; then ./make-publish ; fi

if [ -f "pbs-report.cleaned.$suffix.csv" -a -f "alldata.$suffix.csv" ] ; then
 npbs=`tail -n +3 pbs-report.cleaned.$suffix.csv | awk -F\| 'BEGIN {sum=0;} $7 !~ /dgx/ {sum=sum+1;} END {print sum}'`
 njob=`tail -n +2 alldata.$suffix.csv | wc -l`
 echo check number of jobs in statistics is correct: njob=$njob npbs=$npbs
 if [ $npbs -ne $njob ] ; then make clean ; echo ERROR ; exit 1 ; fi
 echo OK
fi
