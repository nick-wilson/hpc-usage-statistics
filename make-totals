#!/bin/bash
. ./config

cd `dirname $0`

year=${suffix:0:4}
month=${suffix:4:2}

uptime_hours=`awk -F, '{if ( $1 == '$year' && $2 == '$month' ) {printf "%d",$3}}' $base/$data/uptime.csv`
downtime_hours=`awk -F, '{if ( $1 == '$year' && $2 == '$month' ) {printf "%d",$4}}' $base/$data/uptime.csv`

### Combined

_header='"date","uptime_hours","downtime_hours","cores_online","cores_total","percent_cores_online","corehours_jobs","corehours_total","corehours_online","percent_utilisation_total","percent_utilisation_online"'
for s in $stakeholders other ; do
 ss=`echo $s | tr '[A-Z]' '[a-z]'`
 _header="$_header",\"corehours_${ss}\"
done

f=$logdir/utilisation.csv
if [ ! -f "$f" ] ; then
 echo "$_header" > "$f"
else
 _x=`head -n 1 "$f"`
 if [ x"$_x" != x"$_header" ] ; then echo ERROR: format incorrect ; echo old: "$_header" ; echo new: "$_x" ; exit 1 ; fi
fi

cores_total=31320
cores_online=`grep ^cores_online, cores-mean.$suffix.csv | awk -F, '{printf "%.1f",$2}'`
corehours_total=`echo $cores_total $uptime_hours | awk '{printf "%.1f",$1*$2}'`

corehours_online=""
percent_cores_online=""
if [ x"$cores_online" != x ] ; then
 corehours_online=`echo $cores_online $uptime_hours | awk '{printf "%.1f",$1*$2}'`
 percent_cores_online=`echo $cores_online $cores_total | awk '{printf "%.1f%%",100*$1/$2}'`
fi

corehours_jobs=`tail -n 1 total.$suffix.csv | awk -F, '{printf "%.1f",$2}'`
percent_utilisation_total=`echo $corehours_jobs $corehours_total | awk '{printf "%.1f%%",100*$1/$2}'`
percent_utilisation_online=""
if [ x"$cores_online" != x ] ; then
 percent_utilisation_online=`echo $corehours_jobs $corehours_online | awk '{printf "%.1f%%",100*$1/$2}'`
fi

echo -n \"${suffix}\",${uptime_hours},${downtime_hours},${cores_online},${cores_total},${percent_cores_online},${corehours_jobs},${corehours_total},${corehours_online},${percent_utilisation_total},${percent_utilisation_online} >> "$f"
for s in $stakeholders ; do
 if [ -f total.$s.$suffix.csv ] ; then
  tail -n 1 total.$s.$suffix.csv | awk -F, '{printf ",%.1f",$2}' >> "$f"
 else
  echo -n , >> "$f"
 fi
done
echo >> "$f"
tail -n 1 "$f"

### GPU
_header='"date","uptime_hours","downtime_hours","gpus_online","gpus_total","percent_gpus_online","gpuhours_jobs","gpuhours_total","gpuhours_online","percent_utilisation_total","percent_utilisation_online"'
for s in $stakeholders other ; do
 ss=`echo $s | tr '[A-Z]' '[a-z]'`
 _header="$_header",\"gpuhours_${ss}\"
done

f=$logdir/utilisation_gpu.csv
if [ ! -f "$f" ] ; then
 echo "$_header" > "$f"
else
 _x=`head -n 1 "$f"`
 if [ x"$_x" != x"$_header" ] ; then echo ERROR: format incorrect ; echo old: "$_header" ; echo new: "$_x" ; exit 1 ; fi
fi

((gpus_total=128))
gpus_online=`grep ^gpus_online, gpus-mean.$suffix.csv | awk -F, '{printf "%.1f",$2}'`
gpuhours_total=`echo $gpus_total $uptime_hours | awk '{printf "%.1f",$1*$2}'`

gpuhours_online=""
percent_gpus_online=""
if [ x"$gpus_online" != x ] ; then
 gpuhours_online=`echo $gpus_online $uptime_hours | awk '{printf "%.1f",$1*$2}'`
 percent_gpus_online=`echo $gpus_online $gpus_total | awk '{printf "%.1f%%",100*$1/$2}'`
fi

gpuhours_jobs=`tail -n 1 total.$suffix.csv | awk -F, '{printf "%.1f",$4/24.0}'`
percent_utilisation_total=`echo $gpuhours_jobs $gpuhours_total | awk '{printf "%.1f%%",100*$1/$2}'`
percent_utilisation_online=""
if [ x"$gpus_online" != x ] ; then
 percent_utilisation_online=`echo $gpuhours_jobs $gpuhours_online | awk '{printf "%.1f%%",100*$1/$2}'`
fi

echo -n \"${suffix}\",${uptime_hours},${downtime_hours},${gpus_online},${gpus_total},${percent_gpus_online},${gpuhours_jobs},${gpuhours_total},${gpuhours_online},${percent_utilisation_total},${percent_utilisation_online} >> "$f"
for s in $stakeholders ; do
 if [ -f total.$s.$suffix.csv ] ; then
  tail -n 1 total.$s.$suffix.csv | awk -F, '{printf ",%.1f",$4/24.0}' >> "$f"
 else
  echo -n , >> "$f"
 fi
done
echo >> "$f"
tail -n 1 "$f"

### CPU

_header='"date","uptime_hours","downtime_hours","cores_online","cores_total","percent_cores_online","corehours_jobs","corehours_total","corehours_online","percent_utilisation_total","percent_utilisation_online"'
for s in $stakeholders other ; do
 ss=`echo $s | tr '[A-Z]' '[a-z]'`
 _header="$_header",\"corehours_${ss}\"
done

f=$logdir/utilisation_cpu.csv
if [ ! -f "$f" ] ; then
 echo "$_header" > "$f"
else
 _x=`head -n 1 "$f"`
 if [ x"$_x" != x"$_header" ] ; then echo ERROR: format incorrect ; echo old: "$_header" ; echo new: "$_x" ; exit 1 ; fi
fi

((cores_total_gpu=gpus_total*24))
((cores_total=cores_total-cores_total_gpu))

if [ x"$gpus_online" != x -a x"$cores_online" != x ] ; then
 cores_online=`echo $cores_online $gpus_online |  awk '{printf "%.1f",$1-($2*24)}'`
else
 cores_online=""
 gpus_online=""
fi

corehours_total=`echo $cores_total $uptime_hours | awk '{printf "%.1f",$1*$2}'`

corehours_online=""
percent_cores_online=""
if [ x"$cores_online" != x ] ; then
 corehours_online=`echo $cores_online $uptime_hours | awk '{printf "%.1f",$1*$2}'`
 percent_cores_online=`echo $cores_online $cores_total | awk '{printf "%.1f%%",100*$1/$2}'`
fi

corehours_jobs=`tail -n 1 total.$suffix.csv | awk -F, '{printf "%.1f",$3}'`
percent_utilisation_total=`echo $corehours_jobs $corehours_total | awk '{printf "%.1f%%",100*$1/$2}'`
percent_utilisation_online=""
if [ x"$cores_online" != x ] ; then
 percent_utilisation_online=`echo $corehours_jobs $corehours_online | awk '{printf "%.1f%%",100*$1/$2}'`
fi

echo -n \"${suffix}\",${uptime_hours},${downtime_hours},${cores_online},${cores_total},${percent_cores_online},${corehours_jobs},${corehours_total},${corehours_online},${percent_utilisation_total},${percent_utilisation_online} >> "$f"
for s in $stakeholders ; do
 if [ -f total.$s.$suffix.csv ] ; then
  tail -n 1 total.$s.$suffix.csv | awk -F, '{printf ",%.1f",$3}' >> "$f"
 else
  echo -n , >> "$f"
 fi
done
echo >> "$f"
tail -n 1 "$f"
