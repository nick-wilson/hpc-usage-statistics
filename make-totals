#!/bin/bash
. ./config
sed -i "/$suffix/d"  "$logdir"/utilisation*.csv

cd `dirname $0`

year=${suffix:0:4}
month=${suffix:4:2}

uptime_hours=`awk -F, '{if ( $1 == '$year' && $2 == '$month' ) {printf "%d",$3}}' $base/$data/uptime.csv`
downtime_hours=`awk -F, '{if ( $1 == '$year' && $2 == '$month' ) {printf "%d",$4}}' $base/$data/uptime.csv`

### Combined

_header='"date","uptime_hours","downtime_hours","cores_online","cores_total","percent_cores_online","corehours_jobs","corehours_total","corehours_online","percent_utilisation_total","percent_utilisation_online"'
for s in $stakeholders other ; do
 ss=`echo $s | tr '[A-Z]' '[a-z]'`
 _header="$_header",\"corehours_${ss}\"
done

f=$logdir/utilisation.csv
if [ ! -f "$f" ] ; then
 echo "$_header" > "$f"
else
 _x=`head -n 1 "$f"`
 if [ x"$_x" != x"$_header" ] ; then echo ERROR: format incorrect ; echo old: "$_header" ; echo new: "$_x" ; exit 1 ; fi
fi

cores_total=`grep ^cores_total, cores-mean.$suffix.csv | awk -F, '{printf "%.0f",$2}'`
cores_online=`grep ^cores_online, cores-mean.$suffix.csv | awk -F, '{printf "%.1f",$2}'`
corehours_total=`echo $cores_total $uptime_hours | awk '{printf "%.1f",$1*$2}'`

corehours_online=""
percent_cores_online=""
if [ x"$cores_online" != x ] ; then
 corehours_online=`echo $cores_online $uptime_hours | awk '{printf "%.1f",$1*$2}'`
 percent_cores_online=`echo $cores_online $cores_total | awk '{printf "%.1f%%",100*$1/$2}'`
fi

corehours_jobs=`tail -n 1 total.$suffix.csv | awk -F, '{printf "%.1f",$2}'`
percent_utilisation_total=`echo $corehours_jobs $corehours_total | awk '{printf "%.1f%%",100*$1/$2}'`
percent_utilisation_online=""
if [ x"$cores_online" != x ] ; then
 percent_utilisation_online=`echo $corehours_jobs $corehours_online | awk '{printf "%.1f%%",100*$1/$2}'`
fi

echo -n \"${suffix}\",${uptime_hours},${downtime_hours},${cores_online},${cores_total},${percent_cores_online},${corehours_jobs},${corehours_total},${corehours_online},${percent_utilisation_total},${percent_utilisation_online} >> "$f"
for s in $stakeholders ; do
 if [ -f total.$s.$suffix.csv ] ; then
  tail -n 1 total.$s.$suffix.csv | awk -F, '{printf ",%.1f",$2}' >> "$f"
 else
  echo -n , >> "$f"
 fi
done
echo >> "$f"
tail -n 1 "$f"

### GPU
_header='"date","uptime_hours","downtime_hours","gpus_online","gpus_total","percent_gpus_online","gpuhours_jobs","gpuhours_total","gpuhours_online","percent_utilisation_total","percent_utilisation_online"'
for s in $stakeholders other ; do
 ss=`echo $s | tr '[A-Z]' '[a-z]'`
 _header="$_header",\"gpuhours_${ss}\"
done

f=$logdir/utilisation_gpu.csv
if [ ! -f "$f" ] ; then
 echo "$_header" > "$f"
else
 _x=`head -n 1 "$f"`
 if [ x"$_x" != x"$_header" ] ; then echo ERROR: format incorrect ; echo old: "$_header" ; echo new: "$_x" ; exit 1 ; fi
fi

gpus_total=`grep ^gpus_total, gpus-mean.$suffix.csv | awk -F, '{printf "%.0f",$2}'`
gpus_online=`grep ^gpus_online, gpus-mean.$suffix.csv | awk -F, '{printf "%.1f",$2}'`
gpuhours_total=`echo $gpus_total $uptime_hours | awk '{printf "%.1f",$1*$2}'`

gpuhours_online=""
percent_gpus_online=""
if [ x"$gpus_online" != x ] ; then
 gpuhours_online=`echo $gpus_online $uptime_hours | awk '{printf "%.1f",$1*$2}'`
 percent_gpus_online=`echo $gpus_online $gpus_total | awk '{printf "%.1f%%",100*$1/$2}'`
fi

gpuhours_jobs=`tail -n 1 total.$suffix.csv | awk -F, '{printf "%.1f",$4/24.0}'`
percent_utilisation_total=`echo $gpuhours_jobs $gpuhours_total | awk '{printf "%.1f%%",100*$1/$2}'`
percent_utilisation_online=""
if [ x"$gpus_online" != x ] ; then
 percent_utilisation_online=`echo $gpuhours_jobs $gpuhours_online | awk '{printf "%.1f%%",100*$1/$2}'`
fi

echo -n \"${suffix}\",${uptime_hours},${downtime_hours},${gpus_online},${gpus_total},${percent_gpus_online},${gpuhours_jobs},${gpuhours_total},${gpuhours_online},${percent_utilisation_total},${percent_utilisation_online} >> "$f"
for s in $stakeholders ; do
 if [ -f total.$s.$suffix.csv ] ; then
  tail -n 1 total.$s.$suffix.csv | awk -F, '{printf ",%.1f",$4/24.0}' >> "$f"
 else
  echo -n , >> "$f"
 fi
done
echo >> "$f"
tail -n 1 "$f"

### CPU

_header='"date","uptime_hours","downtime_hours","cores_online","cores_total","percent_cores_online","corehours_jobs","corehours_total","corehours_online","percent_utilisation_total","percent_utilisation_online"'
for s in $stakeholders other ; do
 ss=`echo $s | tr '[A-Z]' '[a-z]'`
 _header="$_header",\"corehours_${ss}\"
done

f=$logdir/utilisation_cpu.csv
if [ ! -f "$f" ] ; then
 echo "$_header" > "$f"
else
 _x=`head -n 1 "$f"`
 if [ x"$_x" != x"$_header" ] ; then echo ERROR: format incorrect ; echo old: "$_header" ; echo new: "$_x" ; exit 1 ; fi
fi

((cores_total_gpu=gpus_total*24))
((cores_total=cores_total-cores_total_gpu))

if [ x"$gpus_online" != x -a x"$cores_online" != x ] ; then
 cores_online=`echo $cores_online $gpus_online |  awk '{printf "%.1f",$1-($2*24)}'`
else
 cores_online=""
 gpus_online=""
fi

corehours_total=`echo $cores_total $uptime_hours | awk '{printf "%.1f",$1*$2}'`

corehours_online=""
percent_cores_online=""
if [ x"$cores_online" != x ] ; then
 corehours_online=`echo $cores_online $uptime_hours | awk '{printf "%.1f",$1*$2}'`
 percent_cores_online=`echo $cores_online $cores_total | awk '{printf "%.1f%%",100*$1/$2}'`
fi

corehours_jobs=`tail -n 1 total.$suffix.csv | awk -F, '{printf "%.1f",$3}'`
percent_utilisation_total=`echo $corehours_jobs $corehours_total | awk '{printf "%.1f%%",100*$1/$2}'`
percent_utilisation_online=""
if [ x"$cores_online" != x ] ; then
 percent_utilisation_online=`echo $corehours_jobs $corehours_online | awk '{printf "%.1f%%",100*$1/$2}'`
fi

echo -n \"${suffix}\",${uptime_hours},${downtime_hours},${cores_online},${cores_total},${percent_cores_online},${corehours_jobs},${corehours_total},${corehours_online},${percent_utilisation_total},${percent_utilisation_online} >> "$f"
for s in $stakeholders ; do
 if [ -f total.$s.$suffix.csv ] ; then
  tail -n 1 total.$s.$suffix.csv | awk -F, '{printf ",%.1f",$3}' >> "$f"
 else
  echo -n , >> "$f"
 fi
done
echo >> "$f"
tail -n 1 "$f"

(
cat << EOF
"date","corehours_cpu","corehours_gpu","corehours_jobs","corehours_online","corehours_unused","blank","date","corehours_astar","corehours_nus","corehours_ntu","corehours_create","corehours_other"
"28/3/2016",0.0,0.0,0.0,0.0,0.0,,"28/3/2016",0.0,0.0,0.0,0.0,0.0
EOF
paste -d, \
 <(tail -n +2 $logdir/utilisation.csv | awk -F, '{print $1}' | sed -e 's/^.*-/"/' -e 's,\([0-9][0-9][0-9][0-9]\)\([0-9][0-9]\)\([0-9][0-9]\),\3/\2/\1,' -e 's,/0,/,') \
 <(tail -n +2 $logdir/utilisation_cpu.csv | awk -F, '{print $7}') \
 <(tail -n +2 $logdir/utilisation_gpu.csv | awk -F, '{printf "%.1f\n",$7*24}') \
 <(tail -n +2 $logdir/utilisation.csv | awk -F, '{printf "%.1f,%.1f,%.1f,\n",$7,$8,$8-$7}') \
 <(tail -n +2 $logdir/utilisation.csv | awk -F, '{print $1}' | sed -e 's/^.*-/"/' -e 's,\([0-9][0-9][0-9][0-9]\)\([0-9][0-9]\)\([0-9][0-9]\),\3/\2/\1,' -e 's,/0,/,') \
 <(tail -n +2 $logdir/utilisation.csv | awk -F, '{printf "%.1f,%.1f,%.1f,%.1f,%.1f\n",$12,$14,$13,$19,$7-$12-$14-$13-$19}')
) > monthly.$suffix.csv
echo
head -n 1 monthly.$suffix.csv
tail -n 1 monthly.$suffix.csv

(
cat << EOF
"date","corehours_cpu","corehours_gpu","corehours_jobs","corehours_online","corehours_unused","percent_utilisation","blank","date","corehours_astar","corehours_nus","corehours_ntu","corehours_create","corehours_other"
"28/3/2016",0.0,0.0,0.0,0.0,0.0,0.000,,"28/3/2016",0.0,0.0,0.0,0.0,0.0
EOF
tail -n +3 monthly.$suffix.csv | awk -F, 'BEGIN {t02=0.0;t03=0.0;t04=0.0;t05=0.0;t06=0.0;t09=0.0;t10=0.0;t11=0.0;t12=0.0;t13=0.0;} {t02+=$2;t03+=$3;t04+=$4;t05+=$5;t06+=$6;t09+=$9;t10+=$10;t11+=$11;t12+=$12;t13+=$13;printf "%s,%.1f,%.1f,%.1f,%.1f,%.1f,%.3f,%s,%s,%.1f,%.1f,%.1f,%.1f,%.1f\n",$1,t02,t03,t04,t05,t06,t04/t05,$7,$8,t09,t10,t11,t12,t13}'
) > cumulative.$suffix.csv
echo
head -n 1 cumulative.$suffix.csv
tail -n 1 cumulative.$suffix.csv
