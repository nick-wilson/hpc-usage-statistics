#!/bin/bash

# This script has settings required to run statistics in cron as root on either wlm01 or wlm02
# 
# For weekly report:        GET_LATEST=1 UPDATE_MYUSAGE=1 MAKE_AGGREGATE=0
# For monthly report:       GET_LATEST=1 UPDATE_MYUSAGE=1 MAKE_AGGREGATE=1
# For pre-publication runs: GET_LATEST=0 UPDATE_MYUSAGE=0 MAKE_AGGREGATE=0

cd `dirname $0`
. ./config
monthlydir=`echo $PWD/../../${ey}${em}*`

export PATH="/app/pbs/bin:$PATH:/opt/pbs/bin:/opt/pbs/sbin"
. /etc/profile.d/modules.sh
. /app/modules/modules.sh
module load R/3.3.1
which Rscript
PATH="${PATH}:/app/git/2.9.3/bin" ; export PATH
which git

echo get latest version
./make-pull

echo clean up old results and only leave config file
make veryveryclean
if [ -d dgx ] ; then make -C dgx veryclean ; fi
if [ -d load2apps ] ; then (cd load2apps && ./clean) ; fi
if [ -d system-utilisation ] ; then (cd system-utilisation && ./clean) ; fi

echo first make, only interested in pbs-report data
make pbs-report.raw.$suffix.csv

if [ ${GET_LATEST:-1} -eq 1 ] ; then
 echo get latest application and project data
 if [ -x /app/nsccadmin/log/printjob/get-latest ] ; then /app/nsccadmin/log/printjob/get-latest ; fi
fi

echo second pass of statistics with latest application and qstat information
make veryclean stats

echo get alternate application names
if [ -d load2apps ] ; then (cd load2apps && ./run) ; fi
if [ -d dgx ] ; then make -C dgx veryclean ; fi

echo third pass of statistics with fixed application data
make

if [ ${UPDATE_MYUSAGE:-1} -eq 1 ] ; then
 echo Update myusage data
 ./update-myusage --all
 ./make-publish
 if [ x"$type" == xmonthly ] ; then
  ./make-copyout
 fi
fi

echo fix file ownership
./fix-permissions

echo make spreadsheet and graphics
ssh ntu01 su $statsuser -c $PWD/make-reporting
if [ ! -f "application_usage-${suffix}.xlsx" ] ; then
 echo attempt 1 failed, retry
 ssh nscc04 su $statsuser -c $PWD/make-reporting
fi

if [ ${MAKE_AGGREGATE:-0} -eq 1 ] ; then
 echo copy raw data to be used in aggregate report
 ./copy-to-aggregate || true
fi

if [ ${UPDATE_MYUSAGE:-1} -eq 1 ] ; then
 if [ x"$type" == xweekly ] ; then
  echo circulate weekly spreadsheet via email
  su $statsuser -c $PWD/make-email-draft
  su $statsuser -c $PWD/make-email
 elif [ x"$type" == xmonthly ] ; then
  echo email draft monthly report
  su $statsuser -c $PWD/make-email-monthly-draft
 fi
fi

if [ ${MAKE_AGGREGATE:-0} -eq 1 ] ; then
 echo update aggregate statistics when running monthly report
 cd /app/nsccadmin/apps/usage-statistics/reports/aggregate && \
   ./aggregate && \
   make && \
   if [ -d load2apps ] ; then (cd load2apps && ./run) ; fi && \
   make && \
   ./update-myusage --all --reset && \
   ./make-publish && \
   ./make-copyout && \
   ./fix-permissions
fi

echo system utilisation data
head cores-mean.$suffix.csv gpus-mean.$suffix.csv
echo
echo alternate application names
sed -e 's/^.*,//' load2apps/alternate.csv  | sort | uniq -c | sort -n
